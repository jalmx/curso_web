import { FontOptions, ResolvedFontOptions, SlidevConfig, SlidevDetectedFeatures, SlidevMarkdown, SlidevPreparserExtension, SlidevThemeMeta, SourceSlideInfo } from "@slidev/types";

//#region src/config.d.ts
declare function getDefaultConfig(): SlidevConfig;
declare function resolveConfig(headmatter: any, themeMeta?: SlidevThemeMeta, filepath?: string, verify?: boolean): SlidevConfig;
declare function verifyConfig(config: SlidevConfig, themeMeta?: SlidevThemeMeta, warn?: (v: string) => void): void;
declare function resolveFonts(fonts?: FontOptions): ResolvedFontOptions;
//#endregion
//#region src/core.d.ts
interface SlidevParserOptions {
  noParseYAML?: boolean;
  preserveCR?: boolean;
}
declare function stringify(data: SlidevMarkdown): string;
declare function stringifySlide(data: SourceSlideInfo, idx?: number): string;
declare function prettifySlide(data: SourceSlideInfo): SourceSlideInfo;
declare function prettify(data: SlidevMarkdown): SlidevMarkdown;
declare function detectFeatures(code: string): SlidevDetectedFeatures;
declare function parseSlide(raw: string, options?: SlidevParserOptions): Omit<SourceSlideInfo, 'filepath' | 'index' | 'start' | 'contentStart' | 'end'>;
declare function parse(markdown: string, filepath: string, extensions?: SlidevPreparserExtension[], options?: SlidevParserOptions): Promise<SlidevMarkdown>;
declare function parseSync(markdown: string, filepath: string, options?: SlidevParserOptions): SlidevMarkdown;
//#endregion
export { parseSync as a, stringify as c, resolveConfig as d, resolveFonts as f, parseSlide as i, stringifySlide as l, detectFeatures as n, prettify as o, verifyConfig as p, parse as r, prettifySlide as s, SlidevParserOptions as t, getDefaultConfig as u };